// User function Template for C++
typedef long long ll;
class Solution {
  public:
    int countPaths(int n, vector<vector<int>>& roads) {
        // code here
        n=ll(n);
        
        vector<pair<ll,ll>>adj[n];
        for(auto it:roads)
        {
            adj[it[0]].push_back({it[1],it[2]});
            adj[it[1]].push_back({it[0],it[2]});
        }
        vector<ll>des(n,1e18),way(n,0);
        des[0]=0;
        way[0]=1;
        priority_queue<pair<ll,ll>,vector<pair<ll,ll>>,greater<pair<ll,ll>>>pq;
        pq.push({0,0});
       ll mx=1e9+7;
        while(!pq.empty())
        {
            ll cost=pq.top().first;
            ll node=pq.top().second;
            pq.pop();
            for(auto it:adj[node])
            {
                ll nx=it.first;
               ll w=it.second;
                if(w+cost<des[nx])
                {
                    des[nx]=w+cost;
                    pq.push({w+cost,nx});
                    way[nx]=way[node];
                }
                else if(w+cost==des[nx])
                {
                    way[nx]=(way[nx]+way[node])%mx;
                    
                }
            }
        }
        return int(way[n-1]%mx);
        
    }
};
