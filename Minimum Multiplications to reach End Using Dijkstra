//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function Template for C++

class Solution {
  public:
    int minimumMultiplications(vector<int>&arr, int start, int end) {
        // code here
        int MOD=1e5;
        start%=MOD;
        priority_queue<pair<int,int>, std::vector<pair<int,int>>, std::greater<pair<int,int>>>pq;
        pq.push({0,start});
        vector<int>lev(100001,1e9);
        lev[start]=0;
        while(!pq.empty())
        {
            int node=pq.top().second;
            int d=pq.top().first;
            pq.pop();
            if(node==end)
            {
                return lev[end];
            }
            for(auto i:arr)
            {
                 int nx=(node*1LL*i)%MOD;
                 if(1+d<lev[nx])
                 {
                     lev[nx]=1+d;
                     pq.push({1+d,nx});
                 }
            }
        }
        return -1;
    }
};


//{ Driver Code Starts.

int main() {

    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        vector<int> arr(n);
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }
        int start, end;
        cin >> start >> end;
        Solution obj;
        cout << obj.minimumMultiplications(arr, start, end) << endl;
    }
}

// } Driver Code Ends
